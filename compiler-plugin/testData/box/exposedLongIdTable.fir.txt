FILE: exposedLongIdTable.kt
    package my.test

    @R|org/jetbrains/kotlin/compiler/plugin/template/SomeAnnotation|(kClass = <getClass>(Q|my/test/UsersTable|)) public final data class User : R|kotlin/Any| {
        public constructor(name: R|kotlin/String|, age: R|kotlin/Int|): R|my/test/User| {
            super<R|kotlin/Any|>()
        }

        public final val name: R|kotlin/String| = R|<local>/name|
            public get(): R|kotlin/String|

        public final val age: R|kotlin/Int| = R|<local>/age|
            public get(): R|kotlin/Int|

        public final operator fun component1(): R|kotlin/String|

        public final operator fun component2(): R|kotlin/Int|

        public final fun copy(name: R|kotlin/String| = this@R|my/test/User|.R|my/test/User.name|, age: R|kotlin/Int| = this@R|my/test/User|.R|my/test/User.age|): R|my/test/User|

    }
    public final object UsersTable : R|org/jetbrains/exposed/dao/id/LongIdTable| {
        private constructor(): R|my/test/UsersTable| {
            super<R|org/jetbrains/exposed/dao/id/LongIdTable|>(String(users), String(user_id))
        }

        public final val name: R|org/jetbrains/exposed/sql/Column<kotlin/String>| = this@R|my/test/UsersTable|.R|org/jetbrains/exposed/sql/Table.varchar|(String(name), Int(50))
            public get(): R|org/jetbrains/exposed/sql/Column<kotlin/String>|

        public final val age: R|org/jetbrains/exposed/sql/Column<kotlin/Int>| = this@R|my/test/UsersTable|.R|org/jetbrains/exposed/sql/Table.integer|(String(age))
            public get(): R|org/jetbrains/exposed/sql/Column<kotlin/Int>|

        public final val email: R|org/jetbrains/exposed/sql/Column<kotlin/String?>| = (this@R|my/test/UsersTable|, this@R|my/test/UsersTable|.R|org/jetbrains/exposed/sql/Table.varchar|(String(email), Int(255))).R|SubstitutionOverride<org/jetbrains/exposed/dao/id/LongIdTable.nullable: R|org/jetbrains/exposed/sql/Column<T?>|>|<R|kotlin/String|>()
            public get(): R|org/jetbrains/exposed/sql/Column<kotlin/String?>|

    }
    public final fun box(): R|kotlin/String| {
        lval row: R|org/jetbrains/kotlin/compiler/plugin/template/ResultRow| = Q|org/jetbrains/kotlin/compiler/plugin/template/ResultRow|.R|org/jetbrains/kotlin/compiler/plugin/template/ResultRow.Companion.createAndFillValues|(vararg(Q|my/test/UsersTable|.R|org/jetbrains/exposed/dao/id/LongIdTable.id|.R|kotlin/to|<R|org/jetbrains/exposed/sql/Column<org/jetbrains/exposed/dao/id/EntityID<kotlin/Long>>|, R|kotlin/Int|>(Int(1)), Q|my/test/UsersTable|.R|my/test/UsersTable.name|.R|kotlin/to|<R|org/jetbrains/exposed/sql/Column<kotlin/String>|, R|kotlin/String|>(String(John)), Q|my/test/UsersTable|.R|my/test/UsersTable.age|.R|kotlin/to|<R|org/jetbrains/exposed/sql/Column<kotlin/Int>|, R|kotlin/Int|>(Int(20)), Q|my/test/UsersTable|.R|my/test/UsersTable.email|.R|kotlin/to|<R|org/jetbrains/exposed/sql/Column<kotlin/String?>|, R|kotlin/String|>(String(<EMAIL>))))
        lval actual: R|my/test/User| = R|<local>/row|.R|my/test/toUser|()
        lval expected: R|my/test/User| = R|my/test/User.User|(String(John), Int(20))
        ^box when () {
            ==(R|<local>/actual|, R|<local>/expected|) ->  {
                String(OK)
            }
            else ->  {
                <strcat>(String(Fail: ), R|<local>/actual|)
            }
        }

    }
FILE: __GENERATED DECLARATIONS__.kt
    package my.test

    public final fun R|org/jetbrains/kotlin/compiler/plugin/template/ResultRow|.toUser(): R|my/test/User|
